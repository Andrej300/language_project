{"ast":null,"code":"var _jsxFileName = \"/Users/user/codeclan_work/week_14/travel_lingo/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from \"semantic-ui-react\";\nimport { useState, useEffect } from 'react';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockData = [{\n  id: '1',\n  description: 'What is React?',\n  answers: [{\n    id: '1',\n    description: 'a programming language'\n  }, {\n    id: '2',\n    description: 'a framework'\n  }, {\n    id: '3',\n    description: 'a JS library'\n  }, {\n    id: '4',\n    description: 'a compiler'\n  }],\n  correctAnswer: '3'\n}, {\n  id: '2',\n  description: 'This is the second question?',\n  answers: [{\n    id: '5',\n    description: 'an answer'\n  }, {\n    id: '6',\n    description: 'an answer'\n  }, {\n    id: '7',\n    description: 'an answer'\n  }, {\n    id: '8',\n    description: 'an answer'\n  }],\n  correctAnswer: '1'\n}];\nexport const Quiz = () => {\n  _s();\n\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    // do the following when component first mounts\n    // this is where you call your APIs\n    setQuestions(mockData);\n  }, []);\n\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading the Matrix...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: 'neo',\n      src: \"https://cdn4.iconfinder.com/data/icons/diversity-v2-0-volume-03/64/celebrity-matrix-neo-man-white-512.png\",\n      alt: \"Neo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container',\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n          columns: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: questions[activeQuestion].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: questions[activeQuestion].answers[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: questions[activeQuestion].answers[1].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: questions[activeQuestion].answers[2].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: questions[activeQuestion].answers[3].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Question \", activeQuestion + 1, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Quiz, \"e0WwpckMb6nleAyrlpTmTJGko7E=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/user/codeclan_work/week_14/travel_lingo/src/components/Quiz.js"],"names":["React","Grid","useState","useEffect","mockData","id","description","answers","correctAnswer","Quiz","activeQuestion","setActiveQuestion","questions","setQuestions","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid } from \"semantic-ui-react\";\nimport { useState, useEffect } from 'react';\nimport './Quiz.css'\n\nconst mockData = [\n    {\n        id: '1',\n        description: 'What is React?',\n        answers: [\n            {\n                id: '1',\n                description: 'a programming language'\n            },\n            {\n                id: '2',\n                description: 'a framework'\n            },\n            {\n                id: '3',\n                description: 'a JS library'\n            },\n            {\n                id: '4',\n                description: 'a compiler'\n            }\n        ],\n        correctAnswer: '3'\n    },\n    {\n        id: '2',\n        description: 'This is the second question?',\n        answers: [\n            {\n                id: '5',\n                description: 'an answer'\n            },\n            {\n                id: '6',\n                description: 'an answer'\n            },\n            {\n                id: '7',\n                description: 'an answer'\n            },\n            {\n                id: '8',\n                description: 'an answer'\n            }\n        ],\n        correctAnswer: '1'\n    }\n    \n]\n\nexport const Quiz = () => {\n    const [activeQuestion, setActiveQuestion] = useState(0);\n    const [questions, setQuestions] = useState([]);\n    useEffect(() => {\n        // do the following when component first mounts\n        // this is where you call your APIs\n        setQuestions(mockData);\n    }, [])\n\n    if (questions.length === 0) {\n        return <div>loading the Matrix...</div>\n    }\n    return (\n        <>\n            \n\n            \n\n\n            <img className={'neo'} src=\"https://cdn4.iconfinder.com/data/icons/diversity-v2-0-volume-03/64/celebrity-matrix-neo-man-white-512.png\"   alt=\"Neo\"/>\n\n            <div className={'container'}>\n                <Grid >\n                    <Grid.Row columns={1}>\n                        <Grid.Column>\n                            <div>\n                                {questions[activeQuestion].description}\n                        </div>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={2}>\n                        <Grid.Column>\n                            {questions[activeQuestion].answers[0].description}\n                    </Grid.Column>\n                        <Grid.Column>\n                        {questions[activeQuestion].answers[1].description}\n                    </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={2}>\n                        <Grid.Column>\n                        {questions[activeQuestion].answers[2].description}\n                    </Grid.Column>\n                        <Grid.Column>\n                        {questions[activeQuestion].answers[3].description}\n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <div>Question {activeQuestion + 1} out of {questions.length}</div>\n            </div>\n            \n            \n\n        </>\n    );\n}\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}